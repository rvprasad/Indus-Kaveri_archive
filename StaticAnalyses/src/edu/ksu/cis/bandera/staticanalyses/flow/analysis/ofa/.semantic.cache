;; Object .semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database ".semantic.cache"
  :file ".semantic.cache"
  :tables (list 
   (semanticdb-table "InvokeExprWork.java"
    :file "InvokeExprWork.java"
    :pointmax 2446
    :major-mode 'jde-mode
    :tokens '(("edu.ksu.cis.bandera.bfa.analysis.ofa" package nil nil nil [1 46]) ("edu.ksu.cis.bandera.bfa.AccessExprWork" include nil nil nil [48 94]) ("edu.ksu.cis.bandera.bfa.Context" include nil nil nil [95 134]) ("edu.ksu.cis.bandera.bfa.ExprSwitch" include nil nil nil [135 177]) ("edu.ksu.cis.bandera.bfa.FGNode" include nil nil nil [178 216]) ("edu.ksu.cis.bandera.bfa.MethodVariant" include nil nil nil [217 262]) ("edu.ksu.cis.bandera.bfa.MethodVariantManager" include nil nil nil [263 315]) ("edu.ksu.cis.bandera.bfa.BFA" include nil nil nil [316 351]) ("ca.mcgill.sable.soot.RefType" include nil nil nil [353 389]) ("ca.mcgill.sable.soot.SootClass" include nil nil nil [390 428]) ("ca.mcgill.sable.soot.SootMethod" include nil nil nil [429 468]) ("ca.mcgill.sable.soot.jimple.NonStaticInvokeExpr" include nil nil nil [469 524]) ("ca.mcgill.sable.soot.jimple.SpecialInvokeExpr" include nil nil nil [525 578]) ("ca.mcgill.sable.soot.jimple.Value" include nil nil nil [579 620]) ("java.util.Iterator" include nil nil nil [622 648]) ("org.apache.log4j.Category" include nil nil nil [650 683]) ("InvokeExprWork" type "class" (("cat" variable "Category" nil ((typemodifiers "private" "static" "final")) nil ((reparse-symbol . class_body_declarations)) [933 1022]) ("InvokeExprWork" function nil (("caller" variable "MethodVariant" nil nil nil ((reparse-symbol . formal_parameter_list)) [1048 1069]) ("accessExpr" variable "Value" nil nil nil ((reparse-symbol . formal_parameter_list)) [1070 1087]) ("context" variable "Context" nil nil nil ((reparse-symbol . formal_parameter_list)) [1088 1103])) ((typemodifiers "public")) nil ((reparse-symbol . class_body_declarations)) [1025 1146]) ("execute" function "void" nil ((typemodifiers "public")) nil ((reparse-symbol . class_body_declarations)) [1149 2425])) ("AccessExprWork") ((typemodifiers "public")) nil nil [878 2428]))
    :unmatched-syntax '((close-paren 2423 . 2424) (close-paren 1169 . 1170) (open-paren 1168 . 1169) (close-paren 1103 . 1104) (open-paren 1047 . 1048) (open-paren 929 . 930))
    )
   )
  )
