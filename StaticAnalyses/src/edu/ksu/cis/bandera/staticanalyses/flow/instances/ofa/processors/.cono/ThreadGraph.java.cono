During postprocess run, the idea is to collect all the allocation sites that create Thread (or it's subtype) objects.  These are collected in newExprs.  Likewise, collect all the invocation
expressions that execute Thread.start() method.  These are collected in startCalls.  During the consolidation phase, do the following:
capture the run() call site in Thread.start() method into runCallSite
for each invocation site startSite in startCalls do:
    for each type, t, that arrives at the base of startSite and overrides run() method do:
            Transitively collect all the methods excluding Thread.start() called from the overriding run() method, retrieve the exprs of type t from newExprs, and foreach expr in 
            exprs add expr->methods to thread2methods.  Also populate method2threads.
    for each type, t, that arrives at the base of startSite and doesnot overrides run() method do:
            Retrieve this.target.run() callsite in run().  
            for each value, v, associated with this at this.target.run() do:
                for each type, s, associated with target in the context of v do:
                    Transitively collect all the methods excluding Thread.start() called from s.run() and add v->methods to thread2methods.  Also, populate method2threads.


