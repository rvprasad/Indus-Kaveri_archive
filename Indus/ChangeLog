2009-12-20 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* build.xml: 
	    - removed the requirement to define custom.javadoc.links. 

2009-11-30 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* build.xml: 
		- forced the use of Eclipse compiler.
		- added auxiliary files to the source bundle.

2007-10-16 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/common/graph/AbstractDirectedGraph.java: 
	* src/edu/ksu/cis/indus/common/graph/IDirectedGraph.java: 
		- getSpanningTree() is substituted with getSpanningForest().

2007-10-08 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/common/graph/SimpleEdgeGraph.java: 
		- overrode equals() and hashcode() methods in SimpleLabel.
	* src/edu/ksu/cis/indus/common/graph/AbstractDirectedGraph.java: 
		- optimized reachability calculation.

2007-10-04 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/common/graph/GraphInfo.java: 
		- optimized access to nodes.

2007-09-23 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/common/soot/MetricsProcessor.java: 
		- application statistics were incorrectly returned as library statistics.  FIXED.

	* src/edu/ksu/cis/indus/common/soot/RootMethodTrapper.java: 
		- add a root method trapper that traps every non-private methods of every application class.

2007-07-23 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/processing/Environment.java: 
		- getClass() was not checking if the requested class was loaded.  Fixed.

2007-07-02 Venkatesh Prasad Ranganath <venkateshprasad.ranganath@gmail.com>

	* src/edu/ksu/cis/indus/interfaces/IReadWriteInfo.java: 
		- extended the interface with methods to answer the following questions 
			"Does the method induce sharing between the object graphs rooted at the given arguments/parameters?" 
			"Does the method induce sharing at the end of the access paths rooted at the given arguments/parameters?" 

2006-12-11 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/AbstractStmtGraphFactory.java: 
		- locals were added to stub method impls but were not being added to the body.

2006-06-01 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/MetricsProcessor.java: 
		- added support to retrieve summary of the statistics.

2006-04-23 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/scoping/ISpecification.java: 
	* src/edu/ksu/cis/indus/common/scoping/SpecificationBasedScopeDefinition.java: 
	* src/edu/ksu/cis/indus/common/scoping/AbstractSpecification.java: 
		- added a new type to represent specification (ISpecification).  
		- ripple effect.

2006-04-20 venku <venku@boss.dreamsoft.com>

	* distbuild.xml: changes to release every java file in src-xml folders.

2006-04-18 venku <venku@boss.dreamsoft.com>
	* Renamed annotations to exclude the A prefix.  
	* Added new annotations
	* Added annotations and documentation to classes in package upto edu.ksu.cis.indus.common.fa.
	
2006-03-28 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/interfaces/IMonitorInfo.java: 
		- extend the interface to provide immediate enclosure information.
		- fortunately, the above information is already available by toggling the "transitive" flag on other methods.  Hence,
		the above change has been unrolled.

2006-03-07 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/tools/AbstractTool.java:
		- java.uti.concurrent.Executor framework was used for handling progress events.  However, this framework was
		not shutdown when the tool stopped, hence, caused the VM to wait forever.  Now the framework() is being
		shutdown.

2006-02-22 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/ExceptionFlowInsensitiveStmtGraphFactory.java:
		- added a new statement graph factory that produces exception insensitive statement graphs.
	* src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java:
	* src/edu/ksu/cis/indus/common/soot/Constants.java:
		- changed the way in the method body loading option was handled.
		- changed the names of the constants as well.

2006-02-21 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/AbstractStmtGraphFactory.java:
		- although memory issues can be addressed in small ways by using references, it is not worth the hassle while
		dealing with Soot.  So, I  have given up on reference-based memory tuning and reverted back to maintianing direct
		references to statement graphs.
	* src/edu/ksu/cis/indus/common/soot/Util.java:
		- the assumptions with Soot need to be fixed.  For now, we check if the Thread class exists. If so, we check if the
		start() method is concrete.  If it is concrete then we do nothing.  If not, we plugin a new body for the method.

2006-01-29 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java:
		- method bodies are not loaded if system property LOAD_METHOD_BODIES_DURING_INITIALIZATION is set.
	* src/edu/ksu/cis/indus/common/soot/Constants.java:
		- added a new property constant LOAD_METHOD_BODIES_DURING_INITIALIZATION that can be set to
		  control method body loading.
	* src/edu/ksu/cis/indus/interfaces/ICallingContextRetriever.java:
		- added a new constant to identify calling context. (in the context of Bug #768)

2006-01-22 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/ToStringBasedComparator.java:
		- The SINGLETON can now be accessed via a getter method.
		- This has a major ripple effect.

2006-01-17 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java:
		- made loading method bodies default behavior in loadupClassesAndCollectMains().

	* src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java:
		- Java 5 adoption.
	* src/edu/ksu/cis/indus/processing/IProcessor.java:
	* src/edu/ksu/cis/indus/processing/AbstractProcessor.java:
		- removed the methods processLocals().

	* src/edu/ksu/cis/indus/processing/ProcessingController.java:
		- removed the support to process method locals.
	* src/edu/ksu/cis/indus/processing/IStmtSequencesRetriever.java:
	* src/edu/ksu/cis/indus/processing/OneAllStmtSequenceRetriever.java:
		- renamed retreiveStmtSequences() to retrieveStmtSequences().

2006-01-14 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/processing/Context.java:
		- comparison of components of a context via referential equality will improve accuracy.

2006-01-13 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/graph/AbstractDirectedGraph.java:
		- changed the size of connectivity cache.
		- used references to perform memory optimal SCC caching.

2005-12-30 venku <venku@boss.dreamsoft.com>

	* src-xml/edu/ksu/cis/indus/xmlizer/JimpleXMLizerCLI.java:
		- used getEnvironment() instead of getScene().
	* src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java:
		- added support to handle scoping.
		- changed getScene() to be getEnvironment()
	* src/edu/ksu/cis/indus/annotations/AInternalUse.java:
		- added a new annotation to mark entities that are intended for internal use.

2005-12-26 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/BasicBlockGraphMgr.java (getStmtList):
		- strengthened the output type of getStmtList.
	* src/edu/ksu/cis/indus/common/graph/AbstractDirectedGraph.java (getSCCs):
		- the ordering of components in getSCCs was incorrect.  This has been fixed.
	* src/edu/ksu/cis/indus/common/collections/CollectionUtils.java (collect):
		- both variants now return a list instead of a collection.
	* src/edu/ksu/cis/indus/common/soot/Util.java:
		- fixUpThreadStartBody() implementation was messed up. FIXED.
	* src/edu/ksu/cis/indus/common/graph/GraphReachabilityPredicate.java:
	* src/edu/ksu/cis/indus/common/soot/SootPredicatesAndTransformers.java:
	* src/edu/ksu/cis/indus/common/collections/InstanceOfPredicate.java:
		- generic part of a generic method cannot be erased while inheriting. Previously this was assumed in the above
		classes.  This has been retrofitted.

2005-12-20 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/common/soot/Util.java:
		- changed the behavior of isHierarchicallyRelated() to be true when the givne classes are identical.

2005-12-19 venku <venku@boss.dreamsoft.com>

	* src/edu/ksu/cis/indus/interfaces/IMonitorInfo.java:
		- changed the signature of getMonitorTriples()

2005-12-16  venku  <rvprasad@cis.ksu.edu>

	* auxiliary/scoping_JiBXBinding.xml: adapted to JiBX 1.0RC2 release.

2005-06-27  venku  <rvprasad@cis.ksu.edu>

    * deleted IEscapeInfo.staticfieldAccessShared(SootClass, SootMethod, SootClass, SootMethod)
	* Renamed IAtomicityInfo to IConcurrentIndependenceInfo.

2005-04-15  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/interfaces/IClassHierarchy.java : renamed methods and added a new method to retrieve the
	classes	in the hierarchy in topological order.
	* src/edu/ksu/cis/indus/common/soot/Util.java : deleted getClassesInTopologicalOrder().


2005-03-14  venku  <rvprasad@cis.ksu.edu>

	* src-test/edu/ksu/cis/indus/IEnvironmentBasedTest.java,
	  src-test/edu/ksu/cis/indus/AbstractEnvironmentBasedTest.java:
		Teased apart the support required by environment requiring tests into separate classes.

	* src/edu/ksu/cis/indus/interfaces/IClassHierarchy.java: Added interface to expose class hierarchy information.

	* src/edu/ksu/cis/indus/processing/ProcessingController.java,
	  src/edu/ksu/cis/indus/processing/IProcessor.java,
	  src/edu/ksu/cis/indus/processing/AbstractProcessor.java:
	  	Added the support to process locals in a method's body.


2005-03-10  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/common/soot/ApplicationClassesOnlyPredicate.java: Added facility to filter application classes.

2005-03-09  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/tools/AbstractTool.java : added support to maintain a current configuration separate from active
	configuration.

2005-02-28  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/common/soot/RootMethodTrapper.java,
	  src/edu/ksu/cis/indus/common/soot/SootBasedDriver.java: Refactored logic pertaining to root method trapper.

2005-02-27  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/common/soot/BasicBlockGraph.java: A missing corner case was causing errors. FIXED.

2005-02-25  venku  <rvprasad@cis.ksu.edu>

	* src/edu/ksu/cis/indus/common/soot/BasicBlockGraph.java: A basic block graph containing a self-looping basic block lead to
	infinite loops during basic block creation.  FIXED.