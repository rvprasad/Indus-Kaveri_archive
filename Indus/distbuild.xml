<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->

<project name="indus" default="dist" basedir=".">
    <tstamp/>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>	
	
	<property file="distbuild.properties" />

    <path id="subprojects.buildfiles">
        <pathelement path="${projects.dir}/Indus"/>
        <pathelement path="${projects.dir}/StaticAnalyses"/>
        <pathelement path="${projects.dir}/JavaSlicer"/>
    </path>
	
    <target name="init">
        <tstamp/>
        <fail unless="version.fileid" message="specify the property version.fileid (x.y) via the command line. x and y should be numbers.  This will be used to create the filename."/>
        <fail unless="version.cvsid" message="specify the property version.cvsid (x_y) via the command line. x and y should be numbers.  This will be used to extract the given version and tag the resource with a new tag when the build finishes."/>
    	<delete dir="${projects.dir}"/>
    	<mkdir dir="${projects.dir}"/>
        <cvs cvsroot="${cvs.root}"
            compression="true" compressionlevel="3"
            package="${cvs.modules}"
            cvsRsh="ssh"
            dest="${projects.dir}" failonerror="true"
            command="co -r v${version.cvsid}"/>
    </target>

	<target name="tag">
        <fail unless="version.cvsid" message="specify the property version.cvsid (x_y) via the command line. x and y should be numbers.  This will be used to extract the given version and tag the resource with a new tag when the build finishes."/>
        <cvs cvsroot="${cvs.root}"
             compression="true" compressionlevel="3"
             package="${cvs.modules}"
             cvsRsh="ssh"
             dest="${projects.dir}" failonerror="true"
             command="rtag v${version.cvsid}"/>
	</target>

    <target name="dist" depends="init, cleanAll, buildAllCode, buildAllDoc">
		<antcall target="package"/>
    	<delete dir="${projects.dir}"/>
    </target>
	
	<target name="prepare-docs">
		<mkdir dir="${dist.doc.dir}/${module}/docs/ug"/>
		<unzip dest="${dist.doc.dir}/${module}/docs/ug">
			<fileset dir="${projects.dir}/${module}/docs/ug/dist/">
				<include name="*html-single.zip"/>
			</fileset>			
		</unzip>
		<mkdir dir="${dist.doc.dir}/${module}/docs/javadocs"/>
		<copy todir="${dist.doc.dir}/${module}/docs/javadocs">
			<fileset dir="${projects.dir}/${module}/docs/javadocs"/>
		</copy>
	</target>
	
	<target name="package">
        <mkdir dir="${dist.doc.dir}"/>
		<foreach list="${cvs.modules}" target="prepare-docs" param="module" delimiter=" " inheritall="true"/>		
        <zip destfile="${docs.zip.filename}">
			<zipfileset dir="${dist.doc.dir}" prefix=""/>
		</zip>
        <delete dir="${dist.doc.dir}"/> 

        <copy todir="${dist.dir}" flatten="true">
            <fileset dir="${projects.dir}">
                <include name="*/*.jar"/>
                <exclude name="*/*src*.jar"/>
            </fileset>
        </copy>

        <move todir="${dist.dir}">
            <fileset dir="${dist.dir}">
                <include name="*.jar"/>
            </fileset>
            <mapper type="regexp" from="^([A-Za-z_-]*).jar$$" to="\1-${version.fileid}.jar"/>
        </move>

        <zip destfile="${examples.src.zip.filename}">
            <fileset dir="${projects.dir}">
                <include name="*/src-xml/**/*CLI.java"/>
            	<include name="Indus/src/**/SootBasedDriver.java"/>
            	<include name="*/src/**/*.xsd"/>
            </fileset>
        </zip>
    </target>

    <target name="cleanAll" depends="init">
        <subant target="clean">
        	<property file="distbuild.properties"/>
            <buildpath refid="subprojects.buildfiles"/>
        </subant>
    </target>

    <target name="buildAllCode" depends="init">
        <subant target="build">
	    	<property file="distbuild.properties"/>
            <buildpath refid="subprojects.buildfiles"/>
        </subant>
        <subant target="jar">
           	<property file="distbuild.properties"/>
            <buildpath refid="subprojects.buildfiles"/>
        </subant>
    </target>

    <target name="buildAllDoc" depends="init">
        <subant target="docs">
           	<property file="distbuild.properties"/>            	
            <buildpath refid="subprojects.buildfiles"/>
        </subant>
    </target>

</project>
